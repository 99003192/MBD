%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Sushma\Desktop\matlight.xlsx
%    Worksheet: Sensor_record_20201217_162934_A
%
% Auto-generated by MATLAB on 19-Dec-2020 13:47:58

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 31);

% Specify sheet and range
opts.Sheet = "Sensor_record_20201217_162934_A";
opts.DataRange = "A2:AE24";

% Specify column names and types
opts.VariableNames = ["ACCELEROMETERXms", "ACCELEROMETERYms", "ACCELEROMETERZms", "GRAVITYXms", "GRAVITYYms", "GRAVITYZms", "LINEARACCELERATIONXms", "LINEARACCELERATIONYms", "LINEARACCELERATIONZms", "GYROSCOPEXrads", "GYROSCOPEYrads", "GYROSCOPEZrads", "LIGHTlux", "MAGNETICFIELDXT", "MAGNETICFIELDYT", "MAGNETICFIELDZT", "ORIENTATIONZazimuth", "ORIENTATIONXpitch", "ORIENTATIONYroll", "PROXIMITYi", "SOUNDLEVELdB", "LOCATIONLatitude", "LOCATIONLongitude", "LOCATIONAltitudeM", "LOCATIONAltitudegoogleM", "LOCATIONSpeedKmh", "LOCATIONAccuracyM", "LOCATIONORIENTATION", "SatellitesInRange", "TimeSinceStartInMs", "YYYYMODDHHMISS_SSS"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "categorical", "string", "double", "string", "categorical", "double", "string"];

% Specify variable properties
opts = setvaropts(opts, ["LOCATIONSpeedKmh", "LOCATIONORIENTATION", "YYYYMODDHHMISS_SSS"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["LOCATIONAltitudegoogleM", "LOCATIONSpeedKmh", "LOCATIONORIENTATION", "SatellitesInRange", "YYYYMODDHHMISS_SSS"], "EmptyFieldRule", "auto");

% Import the data
matlight = readtable("C:\Users\Sushma\Desktop\matlight.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts
clc;
%% Convert to output type
ACCELEROMETERXms = matlight.ACCELEROMETERXms;
ACCELEROMETERYms = matlight.ACCELEROMETERYms;
ACCELEROMETERZms = matlight.ACCELEROMETERZms;
GRAVITYXms = matlight.GRAVITYXms;
GRAVITYYms = matlight.GRAVITYYms;
GRAVITYZms = matlight.GRAVITYZms;
LINEARACCELERATIONXms = matlight.LINEARACCELERATIONXms;
LINEARACCELERATIONYms = matlight.LINEARACCELERATIONYms;
LINEARACCELERATIONZms = matlight.LINEARACCELERATIONZms;
GYROSCOPEXrads = matlight.GYROSCOPEXrads;
GYROSCOPEYrads = matlight.GYROSCOPEYrads;
GYROSCOPEZrads = matlight.GYROSCOPEZrads;
LIGHTlux = matlight.LIGHTlux;
MAGNETICFIELDXT = matlight.MAGNETICFIELDXT;
MAGNETICFIELDYT = matlight.MAGNETICFIELDYT;
MAGNETICFIELDZT = matlight.MAGNETICFIELDZT;
ORIENTATIONZazimuth = matlight.ORIENTATIONZazimuth;
ORIENTATIONXpitch = matlight.ORIENTATIONXpitch;
ORIENTATIONYroll = matlight.ORIENTATIONYroll;
PROXIMITYi = matlight.PROXIMITYi;
SOUNDLEVELdB = matlight.SOUNDLEVELdB;
LOCATIONLatitude = matlight.LOCATIONLatitude;
LOCATIONLongitude = matlight.LOCATIONLongitude;
LOCATIONAltitudeM = matlight.LOCATIONAltitudeM;
LOCATIONAltitudegoogleM = matlight.LOCATIONAltitudegoogleM;
LOCATIONSpeedKmh = matlight.LOCATIONSpeedKmh;
LOCATIONAccuracyM = matlight.LOCATIONAccuracyM;
LOCATIONORIENTATION = matlight.LOCATIONORIENTATION;
SatellitesInRange = matlight.SatellitesInRange;
TimeSinceStartInMs = matlight.TimeSinceStartInMs;
YYYYMODDHHMISS_SSS = matlight.YYYYMODDHHMISS_SSS;
%% To find the step count
[raw0_0] = xlsread('C:\Users\Sushma\Desktop\matlight.xlsx','G2:G30');
[raw0_1] = xlsread('C:\Users\Sushma\Desktop\matlight.xlsx','H2:H30');
[raw0_2] = xlsread('C:\Users\Sushma\Desktop\matlight.xlsx','I2:I30');
[raw0_3] = xlsread('C:\Users\Sushma\Desktop\matlight.xlsx','AD2:AD30');
raw = [raw0_0,raw0_1,raw0_2,raw0_3];
data = raw;
behave = table;
behave.Accex = data(:,1);
behave.Accey = data(:,2);
behave.Accez = data(:,3);
behave.TimeSinceStartInMs = data(:,4);
clearvars data raw raw0_0 raw0_1 raw0_2 raw0_3;
ax = behave.Accex;
ay = behave.Accey;
az = behave.Accez;
t = behave.TimeSinceStartInMs;
disp('walk around');
mag = sqrt(sum(ax.^2 + ay.^2 + az.^2,2));
subplot(4,1,1);
plot(t,mag);
xlabel('Time(s)');
ylabel('Acceleration(m/s^2)');
title('Raw Magnitude');
magNoGrav = mag - mean(mag);
subplot(4,1,2);
plot(t,magNoGrav);
xlabel('Time(s)');
ylabel('Acceleration(m/s^2)');
title('No gravity');
amag = abs(magNoGrav);
subplot(4,1,3);
plot(t,amag);
xlabel('Time(s)');
ylabel('Acceleration Magnitude, No gravity(m/s^2)');
title('Absolute Magnitude');
THR = 2;
n = 1;
peaks = (10000);
peaks1 = (1000);
minMag = std(mag);
for k = 2:length(amag)-1
    if (amag(k) > minMag && amag(k) > THR*amag(k-1)) && (amag(k) > THR*amag(k-1))
        peaks(n) = mag(k);
        peaks1(n) = t(k);
        n = n + 1;
    end
end
if isempty(peaks)
    disp('No steps')
    return
end
nSteps = length(peaks);
disp('Number of steps:')
disp(nSteps)
hold on;
plot(peaks1, peaks, 'r', 'Marker', 'v', 'LineStyle', 'none');
hold off;

%% to find the location
clear opts matlight
LOCATIONLAtitude = 13.04;
LOCATIONLongitude = 77.61;
geoplot(LOCATIONLAtitude,LOCATIONLongitude,'--or');

%% human can hear a sound or not
clear opts datasheet
fs = 48000;
t = 0:1/fs:5;
f = 440;
amp1 = t/5;
amp2 = exp(-t);
y = sin(2.*pi.*f.*t);
count=0;
for i=1: length(SOUNDLEVELdB)
    if (SOUNDLEVELdB<3)
        count=count+1;
    end
end
if(count<20)
    Sound_level="too low";
    disp("can't hear the sound");
elseif(20<count>80)
    sound_level="medium";
    disp("human bearable sound");
else(count > 80);
    sound_level = "high";
    disp("human can't bear the sound");
end
figure
subplot(2,1,1)
plot(amp1.*y)
title('amp1')
xlabel('signal point position');
ylabel('amplitude');
subplot(2,1,2)
plot(amp2.*y)
title('amp2')
xlabel('signal point position');
ylabel('amplitude');

%% To find the light whether we are in Dark mode or not
clear opts datasheet
count=0;
for i=1: length(LIGHTlux)
    if (LIGHTlux<3)
        count=count+1;
    end
end
if(count>20)
    light_type="dark";
    disp("you were in dark");
else
    light_type="light";
    disp("you were in light");
end
figure
plot(TimeSinceStartInMs,LIGHTlux)
xlabel("Time")
ylabel("Luminance")
title("Light Intensity")

%% To find the velocity
t=(0:0.2:5.8)

for i = 1:length(ACCELEROMETERXms)-1;
    Vel_X(i)=(ACCELEROMETERXms(i))*(t(i+1)-t(i));
    Pos_X(i)=0.5*ACCELEROMETERXms(i)*((t(i+1)-t(i))^2);
end
for i = 1:length(ACCELEROMETERYms)-1;
    Vel_Y(i)=(ACCELEROMETERYms(i))*(t(i+1)-t(i));
    Pos_Y(i)=0.5*ACCELEROMETERYms(i)*((t(i+1)-t(i))^2);
end
for i = 1:length(ACCELEROMETERZms)-1;
    Vel_Z(i)=(ACCELEROMETERZms(i))*(t(i+1)-t(i));
    Pos_Z(i)=0.5*ACCELEROMETERZms(i)*((t(i+1)-t(i))^2);
end
for i = 1:length(ACCELEROMETERZms)-1;
    M=(Pos_X(i)^2)+(Pos_Y(i)^2)+(Pos_Z(i)^2);
    Pos_mag(i)=sqrt(M);
end
a=length(Pos_mag);
b=length(t);
Pos_mag(28:30)=0;
Vel_X(28:30)=0;
Vel_Y(28:30)=0;
Vel_Z(28:30)=0;
subplot(4,1,1);
plot(t,Pos_mag);
title('Position');
xlabel('Time');
ylabel('Position');

%% To find the gravity between earth and moon
a = xlsread('C:\Users\Sushma\Desktop\matlight.xlsx');
[b] = a(:,6);
[c] = a(:,30);
[d] = b.*1/6
plot(b,d)
xlabel("Earth gravity")
ylabel("Moon gravity")